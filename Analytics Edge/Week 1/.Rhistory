qplot(Downloads,Games,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Au)")
qplot(Downloads,Games,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)",xlabel="Rank",ylabel="No. of Downloads")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)")+xlab("Game Rank")+ylab("Number of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)",xlabel="Rank",ylabel="No. of Downloads")
qplot(Games,(1/Downloads),data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)",xlabel="Rank",ylabel="No. of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+geom_point(colour="grey", size=1, shape=12,alpha=1 )+labs(title="Downloads vs Game Rank(Australia)",xlabel="Rank",ylabel="No. of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=nl)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Netherland)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=nz)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Newzeland)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=nz)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(New Zealand)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
View(dk)
View(au)
View(nl)
View(nz)
rm(list=ls())
nz <- read.csv("~/nz.csv")
View(nz)
nl <- read.csv("~/nl.csv")
View(nl)
nl[-1,]
nl=nl[-1,]
dk <- read.csv("~/dk.csv")
View(dk)
au <- read.csv("~/au.csv")
View(au)
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=nz)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(New Zealand)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=nl)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Netherland)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("No. of Downloads")
qplot(Games,1/Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Transformed Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=dk)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Transformed Downloads vs Game Rank(Denmark)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=nz)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Transformed Downloads vs Game Rank(New Zealand)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,1/Downloads,data=nl)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Transformed Downloads vs Game Rank(Netherland)")+xlab("Rank")+ylab("Transformed Downloads")
qplot(Games,Downloads,data=au)+geom_line(colour="red",linetype="solid",size=1)+
geom_point(colour="grey", size=1, shape=12,alpha=1 )+
labs(title="Downloads vs Game Rank(Australia)")+xlab("Rank")+ylab("No. of Downloads")
qplot(au$Games,1/au$Downloads)
colnames(au)=c("rank","downloads")
View(au)
View(au)
qplot(downloads,rank,data = au)
qplot(1/downloads,rank,data = au)
model=lm(rank~1/downloads,data=au)
summary(model)
qplot(1/downloads,rank,data = au)
library(dplyr)
model=lm(rank~1/download,data=au)
model=lm(rank~1/downloads,data=au)
summary(model)
names(model)
model$coefficients
mutate(au,reci=1/downloads)
au=mutate(au,reci=1/downloads)
model=lm(rank~.,data=au)
summary(model)
3.792*10000
3.792*10000/8.90
3.792*10000/6.90
au=mutate(au,reci_2=reci**2)
View(au)
model=lm(rank~.,data=au)
summary(model)
1.421*1000000/36.1
sqrt(1.421*1000000/36.1)
summary(model)
sqrt(1.421*1000000)
model=lm(rank~.,data=au,weights = 1/au$rank)
summary(model)
10e-4
1e-4
predict(model,data.frame(reci=c(1e-4).reci_2=c(1e-8)))
predict(model,data.frame(reci=c(1e-4),reci_2=c(1e-8)))
model=lm(rank~.-downloads,data=au,weights = 1/au$rank)
predict(model,data.frame(reci=c(1e-4),reci_2=c(1e-8)))
summary(model)
temp=data.frame(reci=c(0.01,0.001,0.0001),reci_2=c(1e-4,1e-6,1e-8))
View(temp)
predict(model,temp)
View(au)
model=lm(rank~.,data=au,weights = 1/au$rank)
model1=lm(rank~.,data=au)
summary(model)
summary(model1)
f8=dbConnect(MySQL(),user="sudokuphp",password="successlist",host="192.168.1.123",dbname="f8sudokuquest")
library(Rmysql)
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
f8=dbConnect(MySQL(),user="sudokuphp",password="successlist",host="192.168.1.123",dbname="f8sudokuquest")
query=dbSendQuery(f8,"select uid,country,starttime from user_info")
user_info=fetch(query)
query=dbSendQuery(f8,"select uid,country,starttime from user_info")
dbClearResult(f8)[1]
dbClearResult(dbListResults(f8)[[1]])
query=dbSendQuery(f8,"select uid,country,starttime from user_info")
user_info=fetch(query,n = -1)
addict <- read.csv("~/Desktop/addict.csv")
View(addict)
View(user_info)
temp=merge(x = addict,y = user_info,by = "uid")
View(temp)
library(dplyr)
temp1=filter(temp,country %in% c("United States","United Kingdom","Canada","Australia"))
View(temp1)
str(temp1)
write.csv(temp1$uid,"us_retarget.csv",row.names=F)
dbClearResult(dbListResults(conn)[[1]])
dbClearResult(dbListResults(f8)[[1]])
query=dbSendQuery(f8,"select * from user_gs_stats_all where date(completed_time)>'2015-1-1")
query=dbSendQuery(f8,"select * from user_gs_stats_all where date(completed_time)>'2015-1-1'")
user_gs=fetch(query,n=-1)
View(user_gs)
temp2=merge(user_gs,temp1,by = "uid")
View(temp2)
filter(temp1,!(uid %in% unique(user_gs$uid)))
retarget=filter(temp1,!(uid %in% unique(user_gs$uid)))
View(retarget)
write.csv(retarget$uid,"retarget.csv",row.names=F)
household_power_consumption <- read.csv("~/Downloads/household_power_consumption.txt", sep=";")
View(household_power_consumption)
plot(as.POSIXct(household_power_consumption$Date),household_power_consumption$Global_active_power)
rm(addict,au,dk,nl,nz,retarget,temp)
rm(temp1,temp2,user_gs,user_info)
max_mile.for.ipad <- read.csv("~/Desktop/max_mile for ipad.csv")
View(max_mile.for.ipad)
median(max_mile.for.ipad$max_milestone)
rm(max_mile.for.ipad)
x=1:100
plot(x*sin(x))
plot(x*abs(sin(x))
)
plot(x*abs(1+sin(x))
)
plot(x*abs(3+sin(x)))
plot(x*abs(3+sin(x)))
plot(x^2*abs(3+sin(x)))
plot(x*abs(3+sin(x)))
line(x,x*abs(3+sin(x)))
install.packages("UsingR")
library(UsingR)
?father.son
data(father.son)
head(father.son)
mean(father.son$sheight)
round(father.son$fheight)==71
mean(father.son[round(father.son$fheight)==71,][2])
father.son[round(father.son$fheight)==71,]
father.son[round(father.son$fheight)==71,]$sheight
mean(father.son[round(father.son$fheight)==71,]$sheight)
matrix(1:1000,nrow = 100,ncol = 10)[25,3]
temp=matrix(c(3,2,1,5,4,2,-1,0,-5,2,5,0,1,-1,-5,1),nrow = 4,ncol = 4)
temp
ceoff=matrix(c(10,5,7,4),4,1)
inv(temp)%*%coeff
solve(temp)%*%coeff
solve(temp)%*%ceoff
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
a
b
a[,3]*b[2,]
a[,3]
b[2,]
b[2,]*a[,3]
a
b
temp=matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(temp)=c("a","a","b","b")
temp
temp%*%beta
beta <- c(5, 2)
temp%*%beta
rank <- read.csv("~/rank.csv")
View(rank)
rank$Date=NULL
library(caret)
preProcValues <- preProcess(training, method = "knn")
preProcValues <- preProcess(rank, method = "knn")
preProcValues <- preProcess(rank, method = "knnImpute")
View(rank)
str(rank)
par(rank)
corr(rank)
cor(rank)
str(rank)
filterCtrl <- sbfControl(functions = rfSBF,
method = "repeatedcv", repeats = 5)
set.seed(10)
rfWithFilter <- sbf(rank[,-1],rank[,1] , sbfControl = filterCtrl)
rank1=rank[,-c(8,9,10)]
View(rank1)
View(rank)
rank1=rank[,-c(11,9,10)]
View(rank1)
rfWithFilter <- sbf(rank1[,-1],rank1[,1] , sbfControl = filterCtrl)
rfWithFilter
cor(rank1)
rank1$new=1/rank1$Search.Rank
cor(rank1)
cor(rank1)
names(cor(rank1))
temp=cor(rank1)
temp
temp[:,1]
temp[,1]
temp[,15]
plot(rank1$Search.Rank)
plot(rank1$Search.Rank,rank1$US.Downloads)
plot(rank1$US.Downloads,rank1$Search.Rank)
plot(rank1$US.Downloads,rank1$new)
source('~/.active-rstudio-document')
final=get_data()
View(final)
cor(final[,c(2,5)])
str(final)
library(dplyr)
str(final)
final1=mutate(final,dt_end=as.Date(dt_end),dt_start=as.Date(dt_start),days_active=dt_end-dt_start)
View(final1)
final1=mutate(final,dt_end=as.Date(dt_end),dt_start=as.Date(dt_start),days_active=dt_end-dt_start,rate=sessions/days_active)
final1=mutate(final,dt_end=as.Date(dt_end),dt_start=as.Date(dt_start),days_active=dt_end-dt_start,rate=sessions/as.numeric(days_active))
View(final1)
final1=filter(final1,days_active!=0)
View(final1)
cor(final1[,c(2,7)])
model=lm(total~sessions+day_active+rate,data=final1)
model=lm(total~sessions+days_active+rate,data=final1)
summary(model)
model=lm(total~sessions,data=final1)
summary(model)
final2=filter(final1,total>1)
model=lm(total~sessions+days_active+rate,data=final2)
summary(model)
final3=filter(final1,total>5)
final3=filter(final1,total>10)
model=lm(total~sessions+days_active+rate,data=final3)
summary(model)
apple_uid <- read.csv("~/Desktop/apple_uid.csv")
View(apple_uid)
apple=merge(final3,apple_uid,by = "uid")
View(apple)
model=lm(total~sessions+days_active+rate,data=apple)
summary(model)
uid_engage <- read.csv("~/Desktop/uid_engage.csv")
View(uid_engage)
final=merge(final,uid_engage,by = "uid")
View(final)
View(final)
View(uid_engage)
rm(apple)
rm(final3,final2)
final=get_data()
View(final)
View(uid_engage)
select(final,-sessions)
final1=select(final,-sessions)
View(final1)
final2=merge(final1,uid_engage,by = "uid")
View(final2)
model=lm(total~sessions+active,data=final2)
summary(model)
final2=mutate(final2,sessions_per_day=sessions/active)
model=lm(total~sessions+active+sessions_per_day,data=final2)
summary(model)
model=lm(total~sessions_per_day,data=final2)
summary(model)
model=lm(total~sessions+active+sessions_per_day,data=final2)
summary(model)
cor(final2[,c(2,5,6)])
summary(model)
rank <- read.csv("~/rank.csv")
View(rank)
rank$Date=NULL
preProcValues <- preProcess(training, method = "knn")
library(caret)
filterCtrl=sbfControl(functions=rfSBF,method = "repeatedcv", repeats = 5)
rfWithFilter <- sbf(rank[,-1],rank[,1] , sbfControl = filterCtrl)
rank1=rank[,-c(8,9,10)]
View(rank1)
rank1=rank[,-c(11,9,10)]
View(rank1)
rfWithFilter <- sbf(rank1[,-1],rank1[,1] , sbfControl = filterCtrl)
rfWithFilter
rank <- read.csv("~/rank.csv")
View(rank)
overall_installs <- read.table("~/overall_installs.numbers", header=TRUE, quote="\"")
View(overall_installs)
final <- read.csv("~/Documents/R Directory/game design/final.csv")
View(final)
str(final)
library(dplyr)
mutate(final,date=as.POSIXct(date))
mutate(final,date=as.POSIXct(as.character(date),"%Y%m%d"))
rank <- read.csv("~/rank.csv")
View(rank)
rank <- read.csv("~/rank.csv")
View(rank)
rank$Date=NULL
#setting up the environment
preProcValues <- preProcess(rank, method = "knnImpute")#imputing the data to estimate the missing values
filterCtrl=sbfControl(functions=rfSBF,method = "repeatedcv", repeats = 5)
#removing the retention values
rank1=rank[,-c(11,9,10)]
rfWithFilter <- sbf(rank1[,-1],rank1[,1] , sbfControl = filterCtrl)
rfWithFilter
rank2=rank1[,c("Cumulative.Rating","current_user_installs","total_user_installs")]
View(rank2)
rank2=rank1[,c("Search.Rank,Cumulative.Rating","current_user_installs","total_user_installs")]
rank2=rank1[,c("Search.Rank",Cumulative.Rating","current_user_installs","total_user_installs")]
rank2=rank1[,c("Search.Rank",Cumulative.Rating","current_user_installs","total_user_installs")]
rank2=rank1[,c("Cumulative.Rating","current_user_installs","total_user_installs")]
rank2$rank=rank1$Search.Rank
View(rank2)
View(rank2)
View(rank2)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
set.seed(25)
rfFit1 <- train(rank ~ ., data = rank2,
method = "rf",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
verbose = FALSE)
library(caret)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
set.seed(25)
rfFit1 <- train(rank ~ ., data = rank2,
method = "rf",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
verbose = FALSE)
rfFit1
predict(rfFit1,newdata=rank2)
temp=as.data.frame(pred=predict(rfFit1,newdata=rank2),rank2$rank)
View(temp)
rank2$pred=predict(rfFit1,newdata=rank2)
View(rank2)
View(rank2)
predict(rfFit1,newdata=as.data.frame(Cumulative.Rating=4.3,current_user_installs=31000,total_user_installs=90000)
)
as.data.frame(Cumulative.Rating=4.3,current_user_installs=31000,total_user_installs=90000)
as.data.frame(c(4.3,31000,90000),row.names=c(Cumulative.Rating,current_user_installs,total_user_installs)
)
as.data.frame(c(4.3,31000,90000))
as.data.frame(c(4.3,31000,90000),row.names=c(Cumulative.Rating,current_user_installs,total_user_installs))
Cumulative.Rating=4.3
current_user_installs=31000
total_user_installs=90000
as.data.frame(Cumulative.Rating,current_user_installs,total_user_installs)
data.frame(Cumulative.Rating,current_user_installs,total_user_installs)
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=31000,total_user_installs=90000)
)
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=40000,total_user_installs=90000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=50000,total_user_installs=90000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=35000,total_user_installs=90000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=31000,total_user_installs=90000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.3,current_user_installs=31000,total_user_installs=100000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.9,current_user_installs=31000,total_user_installs=100000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.9,current_user_installs=310000,total_user_installs=100000))
predict(rfFit1,newdata=data.frame(Cumulative.Rating=4.9,current_user_installs=3100000,total_user_installs=100000))
lm(rank2$pred,rank2$current_user_installs)
lm(rank2$pred~rank2$current_user_installs)
f8=dbConnect(MySQL(),user="sudokuphp",password="successlist",host="192.168.1.123",dbname="f8sudokuquest")
nonf8=dbConnect(MySQL(),user="sudokuphp",password="successlist",host="192.168.1.123",dbname="nonf8sudokuquest")
query=dbSendQuery(f8,"select uid,country,source,starttime from user_info")
dataf8=fetch(query,n=-1)
query=dbSendQuery(nonf8,"select uid,country,source,starttime from user_info")
datanonf8=fetch(query,n=-1)
final=rbind(dataf8,datanonf8)
View(final)
dbWriteTable(nonf8,name = "user_info_combined",value = final)
write.csv(final,"combined_user_info.csv",row.names=F)
dbWriteTable(nonf8,name = "user_info_combined",value = final)
dbClearResult(dbListResults(nonf8)[[1]])
dbWriteTable(nonf8,name = "user_info_combined",value = final)
dbClearResult(dbListResults(f8)[[1]])
dbWriteTable(f8,name = "user_info_combined",value = final)
data <- read.csv("~/Desktop/query_result.csv")
View(data)
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
temp=sqldf("alter table data add primary key (uid,device)")
f8=dbConnect(MySQL(),user="sudokuphp",password="successlist",host="192.168.1.123",dbname="test")
dbWriteTable(f8,name = data,value = "final")
dbWriteTable(f8,name = "data",value = data)
sd(c(5,8,12))
Sys.setlocale("LC_ALL", "C")
setwd("~/Documents/Analytics Edge/Week 1")
data=read.csv("WHO.csv")
View(data)
data_europe=subset(data,region=="Europe")
data_europe=subset(data,Region=="Europe")
mean(data$Over60)
data$Country[which.min(data$Over60)]
data$Country[which.max(data$LiteracyRate)]
tapply(data$ChildMortality,data$Region,min)
rm(list=ls())
boeing <- read.csv("~/Documents/Analytics Edge/Week 1/BoeingStock.csv")
View(boeing)
cola <- read.csv("~/Documents/Analytics Edge/Week 1/CocaColaStock.csv")
View(cola)
ge <- read.csv("~/Documents/Analytics Edge/Week 1/GEStock.csv")
View(ge)
pg <- read.csv("~/Documents/Analytics Edge/Week 1/ProcterGambleStock.csv")
View(pg)
ibm <- read.csv("~/Documents/Analytics Edge/Week 1/IBMStock.csv")
View(ibm)
mean(ibm$StockPrice)
min(ge$StockPrice)
max(cola$StockPrice)
median(boeing$StockPrice)
sd(pg$StockPrice)
plot(cola$Date,cola$StockPrice)
cola$Date[which.max(cola$StockPrice)]
cola$Date[which.min(cola$StockPrice)]
lines(cola$Date,cola$StockPrice)
library(dplyr)
pg=mutate(pg,Date=as.Date(Date,"%m/%d/%y"))
lines(pg$Date,pg$StockPrice)
dev.off()
lines(pg$Date,pg$StockPrice)
lines(pg$Date,pg$StockPrice)
plot()
plot(cola$Date,cola$StockPrice)
lines(pg$Date,pg$StockPrice,col="red")
cola=mutate(cola,Date=as.Date(Date,"%m/%d/%y"))
lines(cola$Date,cola$StockPrice,col="blue")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
plot(cola$Date[301:432], cola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
plot(ge$Date[301:432], ge$StockPrice[301:432], type="l", col="blue", ylim=c(0,210))
plot(cola$Date[301:432], cola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
plot(pg$Date[301:432], pg$StockPrice[301:432], type="l", col="blue", ylim=c(0,210))
boeing=mutate(boeing,Date=as.Date(Date,"%m/%d/%y"))
ibm=mutate(ibm,Date=as.Date(Date,"%m/%d/%y"))
ge=mutate(ge,Date=as.Date(Date,"%m/%d/%y"))
plot(pg$Date[301:432], pg$StockPrice[301:432], type="l", col="blue", ylim=c(0,210))
lines(cola$Date[301:432], cola$StockPrice[301:432],col="blue")
lines(cola$Date[301:432], cola$StockPrice[301:432],col="red")
lines(ge$Date[301:432], ge$StockPrice[301:432],col="green")
lines(ibm$Date[301:432], ibm$StockPrice[301:432],col="purple")
lines(boeing$Date[301:432], boeing$StockPrice[301:432],col="yellow")
abline(v=as.Date(c("1997-09-01")), lwd=2)
abline(v=as.Date(c("1997-11-01")), lwd=2)
abline(v=as.Date(c("2004-1-1")), lwd=2)
abline(v=as.Date(c("2006-1-1")), lwd=2)
tapply(ibm$StockPrice,months(ibm$Date),mean)
mean(ibm$StockPrice)
tapply(ge$StockPrice,months(ibm$Date),mean)
tapply(cola$StockPrice,months(ibm$Date),mean)
which.max(tapply(cola$StockPrice,months(ibm$Date),mean))
